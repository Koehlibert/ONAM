% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Orthogonalize.R
\name{fitPHOModel}
\alias{fitPHOModel}
\title{Fit orthogonal neural additive model}
\usage{
fitPHOModel(
  modelFormula,
  list_of_deep_models,
  data,
  nEnsemble = 20,
  progresstext = FALSE,
  verbose = 0
)
}
\arguments{
\item{modelFormula}{Formula for model fitting. Specify deep parts with the same name as \code{list_of_deep_models}.}

\item{list_of_deep_models}{List of named models used in \code{model_formula}.}

\item{data}{Data to be fitted}

\item{nEnsemble}{Number of orthogonal neural additive model ensembles}

\item{progresstext}{Show model fitting progress. If \code{TRUE}, shows current number of ensemble being fitted}

\item{verbose}{Verbose argument for internal model fitting. Used for debugging.}
}
\value{
Returns a pho model object, containing all ensemble members, ensemble weights, and main and interaction effect outputs.
}
\description{
Fit orthogonal neural additive model
}
\examples{
\donttest{
# Basic example for a simple ONAM-model
# Create training data
n <- 1000
x1 <- runif(n, -2, 2)
x2 <- runif(n, -2, 2)
y <- sin(x1) + ifelse(x2 > 0, pweibull(x2, shape = 3),
  pweibull(-x2, shape = 0.5)) +
  x1 * x2
trainDat <- cbind(x1, x2, y)
# Define model
model_formula <- y ~ mod1(x1) + mod1(x2) +
  mod1(x1, x2)
list_of_deep_models <- list(mod1 = ONAM:::getSubModel)
# Fit model
mod <- fitPHOModel(model_formula, list_of_deep_models,
                   trainDat, nEnsemble = 2,
                   progresstext = T, verbose = 1)
}
}
